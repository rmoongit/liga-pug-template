/* !
 * ScrollTrigger 3.12.1
 * https://greensock.com
 *
 * @license Copyright 2023, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */

!(function (e, t) {
  typeof exports === 'object' && typeof module !== 'undefined'
    ? t(exports)
    : typeof define === 'function' && define.amd
      ? define(['exports'], t)
      : t(((e = e || self).window = e.window || {}));
})(this, function (e) {
  'use strict';
  function _defineProperties(e, t) {
    for (let r = 0; r < t.length; r++) {
      let n = t[r];
      (n.enumerable = n.enumerable || !1),
      (n.configurable = !0),
      'value' in n && (n.writable = !0),
      Object.defineProperty(e, n.key, n);
    }
  }
  function r() {
    return Se || (typeof window !== 'undefined' && (Se = window.gsap) && Se.registerPlugin && Se);
  }
  function z(e, t) {
    return ~ze.indexOf(e) && ze[ze.indexOf(e) + 1][t];
  }
  function A(e) {
    return !!~t.indexOf(e);
  }
  function B(e, t, r, n, i) {
    return e.addEventListener(t, r, {passive: !n, capture: !!i});
  }
  function C(e, t, r, n) {
    return e.removeEventListener(t, r, !!n);
  }
  function F() {
    return (De && De.isPressed) || qe.cache++;
  }
  function G(r, n) {
    function Yc(e) {
      if (e || e === 0) {
        i && (Te.history.scrollRestoration = 'manual');
        let t = De && De.isPressed;
        (e = Yc.v = Math.round(e) || (De && De.iOS ? 1 : 0)), r(e), (Yc.cacheID = qe.cache), t && o('ss', e);
      } else {
        (n || qe.cache !== Yc.cacheID || o('ref')) && ((Yc.cacheID = qe.cache), (Yc.v = r()));
      }
      return Yc.v + Yc.offset;
    }
    return (Yc.offset = 0), r && Yc;
  }
  function J(e, t) {
    return (
      ((t && t._ctx && t._ctx.selector) || Se.utils.toArray)(e)[0] ||
      (typeof e === 'string' && !1 !== Se.config().nullTargetWarn ? console.warn('Element not found:', e) : null)
    );
  }
  function K(t, e) {
    let r = e.s;
    let n = e.sc;
    A(t) && (t = ke.scrollingElement || Ee);
    let i = qe.indexOf(t);
    let o = n === Ie.sc ? 1 : 2;
    ~i || (i = qe.push(t) - 1), qe[i + o] || t.addEventListener('scroll', F);
    let a = qe[i + o];
    let s =
        a ||
        (qe[i + o] =
          G(z(t, r), !0) ||
          (A(t)
            ? n
            : G(function (e) {
              return arguments.length ? (t[r] = e) : t[r];
            })));
    return (s.target = t), a || (s.smooth = Se.getProperty(t, 'scrollBehavior') === 'smooth'), s;
  }
  function L(e, t, i) {
    function vd(e, t) {
      let r = Fe();
      t || n < r - s ? ((a = o), (o = e), (l = s), (s = r)) : i ? (o += e) : (o = a + ((e - a) / (r - l)) * (s - l));
    }
    var o = e;
    var a = e;
    var s = Fe();
    var l = s;
    var n = t || 50;
    let c = Math.max(500, 3 * n);
    return {
      update: vd,
      reset: function reset() {
        (a = o = i ? 0 : o), (l = s = 0);
      },
      getVelocity: function getVelocity(e) {
        let t = l;
        let r = a;
        let n = Fe();
        return (
          (!e && e !== 0) || e === o || vd(e), s === l || c < n - l ? 0 : ((o + (i ? r : -r)) / ((i ? n : s) - t)) * 1e3
        );
      },
    };
  }
  function M(e, t) {
    return t && !e._gsapAllow && e.preventDefault(), e.changedTouches ? e.changedTouches[0] : e;
  }
  function N(e) {
    let t = Math.max.apply(Math, e);
    let r = Math.min.apply(Math, e);
    return Math.abs(t) >= Math.abs(r) ? t : r;
  }
  function O() {
    (Ae = Se.core.globals().ScrollTrigger) &&
      Ae.core &&
      (function _integrate() {
        let e = Ae.core;
        let r = e.bridge || {};
        let t = e._scrollers;
        let n = e._proxies;
        t.push.apply(t, qe),
        n.push.apply(n, ze),
        (qe = t),
        (ze = n),
        (o = function _bridge(e, t) {
          return r[e](t);
        });
      })();
  }
  function P(e) {
    return (
      (Se = e || r()) &&
        typeof document !== 'undefined' &&
        document.body &&
        ((Te = window),
        (Ee = (ke = document).documentElement),
        (Pe = ke.body),
        (t = [Te, ke, Ee, Pe]),
        Se.utils.clamp,
        (Be = Se.core.context || function () {}),
        (Oe = 'onpointerenter' in Pe ? 'pointer' : 'mouse'),
        (Me = k.isTouch =
          Te.matchMedia && Te.matchMedia('(hover: none), (pointer: coarse)').matches
            ? 1
            : 'ontouchstart' in Te || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0
              ? 2
              : 0),
        (Re = k.eventTypes =
          (
            'ontouchstart' in Ee
              ? 'touchstart,touchmove,touchcancel,touchend'
              : 'onpointerdown' in Ee
                ? 'pointerdown,pointermove,pointercancel,pointerup'
                : 'mousedown,mousemove,mouseup,mouseup'
          ).split(',')),
        setTimeout(function () {
          return (i = 0);
        }, 500),
        O(),
        (Ce = 1)),
      Ce
    );
  }
  let Se;
  let Ce;
  let Te;
  let ke;
  let Ee;
  let Pe;
  let Me;
  let Oe;
  let Ae;
  let t;
  let De;
  let Re;
  let Be;
  var i = 1;
  let Ye = [];
  var qe = [];
  var ze = [];
  var Fe = Date.now;
  var o = function _bridge(e, t) {
    return t;
  };
  let n = 'scrollLeft';
  let a = 'scrollTop';
  let Le = {
    s: n,
    p: 'left',
    p2: 'Left',
    os: 'right',
    os2: 'Right',
    d: 'width',
    d2: 'Width',
    a: 'x',
    sc: G(function (e) {
      return arguments.length ? Te.scrollTo(e, Ie.sc()) : Te.pageXOffset || ke[n] || Ee[n] || Pe[n] || 0;
    }),
  };
  var Ie = {
    s: a,
    p: 'top',
    p2: 'Top',
    os: 'bottom',
    os2: 'Bottom',
    d: 'height',
    d2: 'Height',
    a: 'y',
    op: Le,
    sc: G(function (e) {
      return arguments.length ? Te.scrollTo(Le.sc(), e) : Te.pageYOffset || ke[a] || Ee[a] || Pe[a] || 0;
    }),
  };
  (Le.op = Ie), (qe.cache = 0);
  var k =
    ((Observer.prototype.init = function init(e) {
      Ce || P(Se) || console.warn('Please gsap.registerPlugin(Observer)'), Ae || O();
      let i = e.tolerance;
      let a = e.dragMinimum;
      let t = e.type;
      let o = e.target;
      let r = e.lineHeight;
      let n = e.debounce;
      let s = e.preventDefault;
      let l = e.onStop;
      let c = e.onStopDelay;
      let u = e.ignore;
      let f = e.wheelSpeed;
      let p = e.event;
      let d = e.onDragStart;
      let h = e.onDragEnd;
      let g = e.onDrag;
      let v = e.onPress;
      let b = e.onRelease;
      let m = e.onRight;
      let y = e.onLeft;
      let x = e.onUp;
      let _ = e.onDown;
      let w = e.onChangeX;
      let S = e.onChangeY;
      let T = e.onChange;
      let k = e.onToggleX;
      let E = e.onToggleY;
      let D = e.onHover;
      let R = e.onHoverEnd;
      let Y = e.onMove;
      let q = e.ignoreCheck;
      let z = e.isNormalizer;
      let I = e.onGestureStart;
      let X = e.onGestureEnd;
      let H = e.onWheel;
      let W = e.onEnable;
      let G = e.onDisable;
      let j = e.onClick;
      let V = e.scrollSpeed;
      let U = e.capture;
      let Q = e.allowClicks;
      let Z = e.lockAxis;
      let $ = e.onLockAxis;
      function We() {
        return (ye = Fe());
      }
      function Xe(e, t) {
        return (
          ((se.event = e) && u && ~u.indexOf(e.target)) || (t && he && e.pointerType !== 'touch') || (q && q(e, t))
        );
      }
      function Ze() {
        let e = (se.deltaX = N(be));
        let t = (se.deltaY = N(me));
        let r = Math.abs(e) >= i;
        let n = Math.abs(t) >= i;
        T && (r || n) && T(se, e, t, be, me),
        r &&
            (m && se.deltaX > 0 && m(se),
            y && se.deltaX < 0 && y(se),
            w && w(se),
            k && se.deltaX < 0 != le < 0 && k(se),
            (le = se.deltaX),
            (be[0] = be[1] = be[2] = 0)),
        n &&
            (_ && se.deltaY > 0 && _(se),
            x && se.deltaY < 0 && x(se),
            S && S(se),
            E && se.deltaY < 0 != ce < 0 && E(se),
            (ce = se.deltaY),
            (me[0] = me[1] = me[2] = 0)),
        (ne || re) && (Y && Y(se), re && (g(se), (re = !1)), (ne = !1)),
        oe && !(oe = !1) && $ && $(se),
        ie && (H(se), (ie = !1)),
        (ee = 0);
      }
      function $e(e, t, r) {
        (be[r] += e),
        (me[r] += t),
        se._vx.update(e),
        se._vy.update(t),
        n ? (ee = ee || requestAnimationFrame(Ze)) : Ze();
      }
      function _e(e, t) {
        Z && !ae && ((se.axis = ae = Math.abs(e) > Math.abs(t) ? 'x' : 'y'), (oe = !0)),
        ae !== 'y' && ((be[2] += e), se._vx.update(e, !0)),
        ae !== 'x' && ((me[2] += t), se._vy.update(t, !0)),
        n ? (ee = ee || requestAnimationFrame(Ze)) : Ze();
      }
      function af(e) {
        if (!Xe(e, 1)) {
          let t = (e = M(e, s)).clientX;
          let r = e.clientY;
          let n = t - se.x;
          let i = r - se.y;
          let o = se.isDragging;
          (se.x = t),
          (se.y = r),
          (o || Math.abs(se.startX - t) >= a || Math.abs(se.startY - r) >= a) &&
              (g && (re = !0), o || (se.isDragging = !0), _e(n, i), o || (d && d(se)));
        }
      }
      function df(e) {
        return e.touches && e.touches.length > 1 && (se.isGesturing = !0) && I(e, se.isDragging);
      }
      function ef() {
        return (se.isGesturing = !1) || X(se);
      }
      function ff(e) {
        if (!Xe(e)) {
          let t = ue();
          let r = fe();
          $e((t - pe) * V, (r - de) * V, 1), (pe = t), (de = r), l && te.restart(!0);
        }
      }
      function gf(e) {
        if (!Xe(e)) {
          (e = M(e, s)), H && (ie = !0);
          let t = (e.deltaMode === 1 ? r : e.deltaMode === 2 ? Te.innerHeight : 1) * f;
          $e(e.deltaX * t, e.deltaY * t, 0), l && !z && te.restart(!0);
        }
      }
      function hf(e) {
        if (!Xe(e)) {
          let t = e.clientX;
          let r = e.clientY;
          let n = t - se.x;
          let i = r - se.y;
          (se.x = t), (se.y = r), (ne = !0), (n || i) && _e(n, i);
        }
      }
      function jf(e) {
        (se.event = e), D(se);
      }
      function kf(e) {
        (se.event = e), R(se);
      }
      function lf(e) {
        return Xe(e) || (M(e, s) && j(se));
      }
      (this.target = o = J(o) || Ee),
      (this.vars = e),
      (u = u && Se.utils.toArray(u)),
      (i = i || 1e-9),
      (a = a || 0),
      (f = f || 1),
      (V = V || 1),
      (t = t || 'wheel,touch,pointer'),
      (n = !1 !== n),
      (r = r || parseFloat(Te.getComputedStyle(Pe).lineHeight) || 22);
      let ee;
      let te;
      let re;
      let ne;
      let ie;
      let oe;
      let ae;
      var se = this;
      var le = 0;
      var ce = 0;
      var ue = K(o, Le);
      var fe = K(o, Ie);
      var pe = ue();
      var de = fe();
      var he = ~t.indexOf('touch') && !~t.indexOf('pointer') && Re[0] === 'pointerdown';
      let ge = A(o);
      let ve = o.ownerDocument || ke;
      var be = [0, 0, 0];
      var me = [0, 0, 0];
      var ye = 0;
      let xe = (se.onPress = function (e) {
        Xe(e, 1) ||
            (e && e.button) ||
            ((se.axis = ae = null),
            te.pause(),
            (se.isPressed = !0),
            (e = M(e)),
            (le = ce = 0),
            (se.startX = se.x = e.clientX),
            (se.startY = se.y = e.clientY),
            se._vx.reset(),
            se._vy.reset(),
            B(z ? o : ve, Re[1], af, s, !0),
            (se.deltaX = se.deltaY = 0),
            v && v(se));
      });
      let we = (se.onRelease = function (t) {
        if (!Xe(t, 1)) {
          C(z ? o : ve, Re[1], af, !0);
          let e = !isNaN(se.y - se.startY);
          let r = se.isDragging && (Math.abs(se.x - se.startX) > 3 || Math.abs(se.y - se.startY) > 3);
          let n = M(t);
          !r &&
              e &&
              (se._vx.reset(),
              se._vy.reset(),
              s &&
                Q &&
                Se.delayedCall(0.08, function () {
                  if (Fe() - ye > 300 && !t.defaultPrevented) {
                    if (t.target.click) {
                      t.target.click();
                    } else if (ve.createEvent) {
                      let e = ve.createEvent('MouseEvents');
                      e.initMouseEvent(
                          'click',
                          !0,
                          !0,
                          Te,
                          1,
                          n.screenX,
                          n.screenY,
                          n.clientX,
                          n.clientY,
                          !1,
                          !1,
                          !1,
                          !1,
                          0,
                          null
                      ),
                      t.target.dispatchEvent(e);
                    }
                  }
                })),
          (se.isDragging = se.isGesturing = se.isPressed = !1),
          l && !z && te.restart(!0),
          h && r && h(se),
          b && b(se, r);
        }
      });
      (te = se._dc =
        Se.delayedCall(c || 0.25, function onStopFunc() {
          se._vx.reset(), se._vy.reset(), te.pause(), l && l(se);
        }).pause()),
      (se.deltaX = se.deltaY = 0),
      (se._vx = L(0, 50, !0)),
      (se._vy = L(0, 50, !0)),
      (se.scrollX = ue),
      (se.scrollY = fe),
      (se.isDragging = se.isGesturing = se.isPressed = !1),
      Be(this),
      (se.enable = function (e) {
        return (
          se.isEnabled ||
              (B(ge ? ve : o, 'scroll', F),
              t.indexOf('scroll') >= 0 && B(ge ? ve : o, 'scroll', ff, s, U),
              t.indexOf('wheel') >= 0 && B(o, 'wheel', gf, s, U),
              ((t.indexOf('touch') >= 0 && Me) || t.indexOf('pointer') >= 0) &&
                (B(o, Re[0], xe, s, U),
                B(ve, Re[2], we),
                B(ve, Re[3], we),
                Q && B(o, 'click', We, !1, !0),
                j && B(o, 'click', lf),
                I && B(ve, 'gesturestart', df),
                X && B(ve, 'gestureend', ef),
                D && B(o, Oe + 'enter', jf),
                R && B(o, Oe + 'leave', kf),
                Y && B(o, Oe + 'move', hf)),
              (se.isEnabled = !0),
              e && e.type && xe(e),
              W && W(se)),
          se
        );
      }),
      (se.disable = function () {
        se.isEnabled &&
            (Ye.filter(function (e) {
              return e !== se && A(e.target);
            }).length || C(ge ? ve : o, 'scroll', F),
            se.isPressed && (se._vx.reset(), se._vy.reset(), C(z ? o : ve, Re[1], af, !0)),
            C(ge ? ve : o, 'scroll', ff, U),
            C(o, 'wheel', gf, U),
            C(o, Re[0], xe, U),
            C(ve, Re[2], we),
            C(ve, Re[3], we),
            C(o, 'click', We, !0),
            C(o, 'click', lf),
            C(ve, 'gesturestart', df),
            C(ve, 'gestureend', ef),
            C(o, Oe + 'enter', jf),
            C(o, Oe + 'leave', kf),
            C(o, Oe + 'move', hf),
            (se.isEnabled = se.isPressed = se.isDragging = !1),
            G && G(se));
      }),
      (se.kill = se.revert =
          function () {
            se.disable();
            let e = Ye.indexOf(se);
            e >= 0 && Ye.splice(e, 1), De === se && (De = 0);
          }),
      Ye.push(se),
      z && A(o) && (De = se),
      se.enable(p);
    }),
    (function _createClass(e, t, r) {
      return t && _defineProperties(e.prototype, t), r && _defineProperties(e, r), e;
    })(Observer, [
      {
        key: 'velocityX',
        get: function get() {
          return this._vx.getVelocity();
        },
      },
      {
        key: 'velocityY',
        get: function get() {
          return this._vy.getVelocity();
        },
      }
    ]),
    Observer);
  function Observer(e) {
    this.init(e);
  }
  (k.version = '3.12.1'),
  (k.create = function (e) {
    return new k(e);
  }),
  (k.register = P),
  (k.getAll = function () {
    return Ye.slice();
  }),
  (k.getById = function (t) {
    return Ye.filter(function (e) {
      return e.vars.id === t;
    })[0];
  }),
  r() && Se.registerPlugin(k);
  function ya(e, t, r) {
    let n = pt(e) && (e.substr(0, 6) === 'clamp(' || e.indexOf('max') > -1);
    return (r['_' + t + 'Clamp'] = n) ? e.substr(6, e.length - 7) : e;
  }
  function za(e, t) {
    return !t || (pt(e) && e.substr(0, 6) === 'clamp(') ? e : 'clamp(' + e + ')';
  }
  function Ba() {
    return (et = 1);
  }
  function Ca() {
    return (et = 0);
  }
  function Da(e) {
    return e;
  }
  function Ea(e) {
    return Math.round(1e5 * e) / 1e5 || 0;
  }
  function Fa() {
    return typeof window !== 'undefined';
  }
  function Ga() {
    return Ne || (Fa() && (Ne = window.gsap) && Ne.registerPlugin && Ne);
  }
  function Ha(e) {
    return !!~l.indexOf(e);
  }
  function Ia(e) {
    return (
      z(e, 'getBoundingClientRect') ||
      (Ha(e)
        ? function () {
          return (Rt.width = He.innerWidth), (Rt.height = He.innerHeight), Rt;
        }
        : function () {
          return Ct(e);
        })
    );
  }
  function La(e, t) {
    let r = t.s;
    let n = t.d2;
    let i = t.d;
    let o = t.a;
    return Math.max(
        0,
        (r = 'scroll' + n) && (o = z(e, r))
          ? o() - Ia(e)()[i]
          : Ha(e)
            ? (je[r] || Je[r]) - (He['inner' + n] || je['client' + n] || Je['client' + n])
            : e[r] - e['offset' + n]
    );
  }
  function Ma(e, t) {
    for (let r = 0; r < h.length; r += 3) {
      (t && !~t.indexOf(h[r + 1])) || e(h[r], h[r + 1], h[r + 2]);
    }
  }
  function Oa(e) {
    return typeof e === 'function';
  }
  function Pa(e) {
    return typeof e === 'number';
  }
  function Qa(e) {
    return typeof e === 'object';
  }
  function Ra(e, t, r) {
    return e && e.progress(t ? 0 : 1) && r && e.pause();
  }
  function Sa(e, t) {
    if (e.enabled) {
      let r = t(e);
      r && r.totalTime && (e.callbackAnimation = r);
    }
  }
  function hb(e) {
    return He.getComputedStyle(e);
  }
  function jb(e, t) {
    for (let r in t) {
      r in e || (e[r] = t[r]);
    }
    return e;
  }
  function lb(e, t) {
    let r = t.d2;
    return e['offset' + r] || e['client' + r] || 0;
  }
  function mb(e) {
    let t;
    let r = [];
    let n = e.labels;
    let i = e.duration();
    for (t in n) {
      r.push(n[t] / i);
    }
    return r;
  }
  function ob(i) {
    let o = Ne.utils.snap(i);
    let a =
        Array.isArray(i) &&
        i.slice(0).sort(function (e, t) {
          return e - t;
        });
    return a
      ? function (e, t, r) {
        let n;
        if ((void 0 === r && (r = 0.001), !t)) {
          return o(e);
        }
        if (t > 0) {
          for (e -= r, n = 0; n < a.length; n++) {
            if (a[n] >= e) {
              return a[n];
            }
          }
          return a[n - 1];
        }
        for (n = a.length, e += r; n--;) {
          if (a[n] <= e) {
            return a[n];
          }
        }
        return a[0];
      }
      : function (e, t, r) {
        void 0 === r && (r = 0.001);
        let n = o(e);
        return !t || Math.abs(n - e) < r || n - e < 0 == t < 0 ? n : o(t < 0 ? e - i : e + i);
      };
  }
  function qb(t, r, e, n) {
    return e.split(',').forEach(function (e) {
      return t(r, e, n);
    });
  }
  function rb(e, t, r, n, i) {
    return e.addEventListener(t, r, {passive: !n, capture: !!i});
  }
  function sb(e, t, r, n) {
    return e.removeEventListener(t, r, !!n);
  }
  function tb(e, t, r) {
    (r = r && r.wheelHandler) && (e(t, 'wheel', r), e(t, 'touchmove', r));
  }
  function xb(e, t) {
    if (pt(e)) {
      let r = e.indexOf('=');
      let n = ~r ? (e.charAt(r - 1) + 1) * parseFloat(e.substr(r + 1)) : 0;
      ~r && (e.indexOf('%') > r && (n *= t / 100), (e = e.substr(0, r - 1))),
      (e = n + (e in Y ? Y[e] * t : ~e.indexOf('%') ? (parseFloat(e) * t) / 100 : parseFloat(e) || 0));
    }
    return e;
  }
  function yb(e, t, r, n, i, o, a, s) {
    let l = i.startColor;
    let c = i.endColor;
    let u = i.fontSize;
    let f = i.indent;
    let p = i.fontWeight;
    let d = Ge.createElement('div');
    let h = Ha(r) || z(r, 'pinType') === 'fixed';
    let g = e.indexOf('scroller') !== -1;
    let v = h ? Je : r;
    let b = e.indexOf('start') !== -1;
    let m = b ? l : c;
    let y =
        'border-color:' +
        m +
        ';font-size:' +
        u +
        ';color:' +
        m +
        ';font-weight:' +
        p +
        ';pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;';
    return (
      (y += 'position:' + ((g || s) && h ? 'fixed;' : 'absolute;')),
      (!g && !s && h) || (y += (n === Ie ? T : D) + ':' + (o + parseFloat(f)) + 'px;'),
      a && (y += 'box-sizing:border-box;text-align:left;width:' + a.offsetWidth + 'px;'),
      (d._isStart = b),
      d.setAttribute('class', 'gsap-marker-' + e + (t ? ' marker-' + t : '')),
      (d.style.cssText = y),
      (d.innerText = t || t === 0 ? e + '-' + t : e),
      v.children[0] ? v.insertBefore(d, v.children[0]) : v.appendChild(d),
      (d._offset = d['offset' + n.op.d2]),
      q(d, 0, n, b),
      d
    );
  }
  function Db() {
    return ct() - ut > 34 && (w = w || requestAnimationFrame(V));
  }
  function Eb() {
    (v && v.isPressed && !(v.startX > Je.clientWidth)) ||
      (qe.cache++, v ? (w = w || requestAnimationFrame(V)) : V(), ut || H('scrollStart'), (ut = ct()));
  }
  function Fb() {
    (y = He.innerWidth), (m = He.innerHeight);
  }
  function Gb() {
    qe.cache++,
    Qe ||
        g ||
        Ge.fullscreenElement ||
        Ge.webkitFullscreenElement ||
        (b && y === He.innerWidth && !(Math.abs(He.innerHeight - m) > 0.25 * He.innerHeight)) ||
        c.restart(!0);
  }
  function Jb() {
    return sb(ee, 'scrollEnd', Jb) || Ot(!0);
  }
  function Mb(e) {
    for (let t = 0; t < W.length; t += 5) {
      (!e || (W[t + 4] && W[t + 4].query === e)) &&
        ((W[t].style.cssText = W[t + 1]),
        W[t].getBBox && W[t].setAttribute('transform', W[t + 2] || ''),
        (W[t + 3].uncache = 1));
    }
  }
  function Nb(e, t) {
    let r;
    for (tt = 0; tt < Et.length; tt++) {
      !(r = Et[tt]) || (t && r._ctx !== t) || (e ? r.kill(1) : r.revert(!0, !0));
    }
    t && Mb(t), t || H('revert');
  }
  function Ob(e, t) {
    qe.cache++,
    (!t && ot) ||
        qe.forEach(function (e) {
          return Oa(e) && e.cacheID++ && (e.rec = 0);
        }),
    pt(e) && (He.history.scrollRestoration = _ = e);
  }
  function _b(e, t, r, n) {
    if (!e._gsap.swappedIn) {
      for (var i, o = U.length, a = t.style, s = e.style; o--;) {
        a[(i = U[o])] = r[i];
      }
      (a.position = r.position === 'absolute' ? 'absolute' : 'relative'),
      r.display === 'inline' && (a.display = 'inline-block'),
      (s[D] = s[T] = 'auto'),
      (a.flexBasis = r.flexBasis || 'auto'),
      (a.overflow = 'visible'),
      (a.boxSizing = 'border-box'),
      (a[ht] = lb(e, Le) + St),
      (a[gt] = lb(e, Ie) + St),
      (a[xt] = s[_t] = s.top = s.left = '0'),
      Dt(n),
      (s[ht] = s.maxWidth = r[ht]),
      (s[gt] = s.maxHeight = r[gt]),
      (s[xt] = r[xt]),
      e.parentNode !== t && (e.parentNode.insertBefore(t, e), t.appendChild(e)),
      (e._gsap.swappedIn = !0);
    }
  }
  function cc(e) {
    for (var t = Q.length, r = e.style, n = [], i = 0; i < t; i++) {
      n.push(Q[i], r[Q[i]]);
    }
    return (n.t = e), n;
  }
  function fc(e, t, r, n, i, o, a, s, l, c, u, f, p, d) {
    Oa(e) && (e = e(s)),
    pt(e) && e.substr(0, 3) === 'max' && (e = f + (e.charAt(4) === '=' ? xb('0' + e.substr(3), r) : 0));
    let h;
    let g;
    let v;
    let b = p ? p.time() : 0;
    if ((p && p.seek(0), isNaN(e) || (e = +e), Pa(e))) {
      p && (e = Ne.utils.mapRange(p.scrollTrigger.start, p.scrollTrigger.end, 0, f, e)), a && q(a, r, n, !0);
    } else {
      Oa(t) && (t = t(s));
      let m;
      let y;
      let x;
      let _;
      let w = (e || '0').split(' ');
      (v = J(t, s) || Je),
      ((m = Ct(v) || {}) && (m.left || m.top)) ||
          hb(v).display !== 'none' ||
          ((_ = v.style.display),
          (v.style.display = 'block'),
          (m = Ct(v)),
          _ ? (v.style.display = _) : v.style.removeProperty('display')),
      (y = xb(w[0], m[n.d])),
      (x = xb(w[1] || '0', r)),
      (e = m[n.p] - l[n.p] - c + y + i - x),
      a && q(a, x, n, r - x < 20 || (a._isStart && x > 20)),
      (r -= r - x);
    }
    if ((d && ((s[d] = e || -0.001), e < 0 && (e = 0)), o)) {
      let S = e + r;
      let C = o._isStart;
      (h = 'scroll' + n.d2),
      q(o, S, n, (C && S > 20) || (!C && (u ? Math.max(Je[h], je[h]) : o.parentNode[h]) <= S + 1)),
      u && ((l = Ct(a)), u && (o.style[n.op.p] = l[n.op.p] - n.op.m - o._offset + St));
    }
    return (
      p &&
        v &&
        ((h = Ct(v)), p.seek(f), (g = Ct(v)), (p._caScrollDist = h[n.p] - g[n.p]), (e = (e / p._caScrollDist) * f)),
      p && p.seek(b),
      p ? e : Math.round(e)
    );
  }
  function hc(e, t, r, n) {
    if (e.parentNode !== t) {
      let i;
      let o;
      let a = e.style;
      if (t === Je) {
        for (i in ((e._stOrig = a.cssText), (o = hb(e)))) {
          +i || $.test(i) || !o[i] || typeof a[i] !== 'string' || i === '0' || (a[i] = o[i]);
        }
        (a.top = r), (a.left = n);
      } else {
        a.cssText = e._stOrig;
      }
      (Ne.core.getCache(e).uncache = 1), t.appendChild(e);
    }
  }
  function ic(r, e, n) {
    let i = e;
    let o = i;
    return function (e) {
      let t = Math.round(r());
      return t !== i && t !== o && Math.abs(t - i) > 3 && Math.abs(t - o) > 3 && ((e = t), n && n()), (o = i), (i = e);
    };
  }
  function jc(e, t, r) {
    let n = {};
    (n[t.p] = '+=' + r), Ne.set(e, n);
  }
  function kc(c, e) {
    function pk(e, t, r, n, i) {
      let o = pk.tween;
      let a = t.onComplete;
      let s = {};
      r = r || u();
      let l = ic(u, r, function () {
        o.kill(), (pk.tween = 0);
      });
      return (
        (i = (n && i) || 0),
        (n = n || e - r),
        o && o.kill(),
        (t[f] = e),
        ((t.modifiers = s)[f] = function () {
          return l(r + n * o.ratio + i * o.ratio * o.ratio);
        }),
        (t.onUpdate = function () {
          qe.cache++, V();
        }),
        (t.onComplete = function () {
          (pk.tween = 0), a && a.call(o);
        }),
        (o = pk.tween = Ne.to(c, t))
      );
    }
    var u = K(c, e);
    var f = '_scroll' + e.p2;
    return (
      ((c[f] = u).wheelHandler = function () {
        return pk.tween && pk.tween.kill() && (pk.tween = 0);
      }),
      rb(c, 'wheel', u.wheelHandler),
      ee.isTouch && rb(c, 'touchmove', u.wheelHandler),
      pk
    );
  }
  let Ne;
  let s;
  let He;
  let Ge;
  let je;
  let Je;
  let l;
  let c;
  let Ve;
  let Ue;
  let Ke;
  let u;
  let Qe;
  let et;
  let f;
  let tt;
  let p;
  let d;
  let h;
  let rt;
  let nt;
  let g;
  let v;
  let b;
  let m;
  let y;
  let E;
  let x;
  let _;
  let it;
  let w;
  let ot;
  let at;
  let st;
  let lt = 1;
  var ct = Date.now;
  let S = ct();
  var ut = 0;
  let ft = 0;
  var pt = function _isString(e) {
    return typeof e === 'string';
  };
  let dt = Math.abs;
  var T = 'right';
  var D = 'bottom';
  var ht = 'width';
  var gt = 'height';
  let vt = 'Right';
  let bt = 'Left';
  let mt = 'Top';
  let yt = 'Bottom';
  var xt = 'padding';
  var _t = 'margin';
  let wt = 'Width';
  let R = 'Height';
  var St = 'px';
  var Ct = function _getBounds(e, t) {
    let r =
          t &&
          hb(e)[f] !== 'matrix(1, 0, 0, 1, 0, 0)' &&
          Ne.to(e, {
            x: 0,
            y: 0,
            xPercent: 0,
            yPercent: 0,
            rotation: 0,
            rotationX: 0,
            rotationY: 0,
            scale: 1,
            skewX: 0,
            skewY: 0,
          }).progress(1);
    let n = e.getBoundingClientRect();
    return r && r.progress(0).kill(), n;
  };
  let Tt = {startColor: 'green', endColor: 'red', indent: 0, fontSize: '16px', fontWeight: 'normal'};
  let kt = {toggleActions: 'play', anticipatePin: 0};
  var Y = {top: 0, left: 0, center: 0.5, bottom: 1, right: 1};
  var q = function _positionMarker(e, t, r, n) {
    let i = {display: 'block'};
    let o = r[n ? 'os2' : 'p2'];
    let a = r[n ? 'p2' : 'os2'];
    (e._isFlipped = n),
    (i[r.a + 'Percent'] = n ? -100 : 0),
    (i[r.a] = n ? '1px' : 0),
    (i['border' + o + wt] = 1),
    (i['border' + a + wt] = 0),
    (i[r.p] = t + 'px'),
    Ne.set(e, i);
  };
  var Et = [];
  let Pt = {};
  let I = {};
  let X = [];
  var H = function _dispatch(e) {
    return (
      (I[e] &&
          I[e].map(function (e) {
            return e();
          })) ||
        X
    );
  };
  var W = [];
  let Mt = 0;
  var Ot = function _refreshAll(e, t) {
    if (!ut || e) {
      (ot = ee.isRefreshing = !0),
      qe.forEach(function (e) {
        return Oa(e) && ++e.cacheID && (e.rec = e());
      });
      let r = H('refreshInit');
      rt && ee.sort(),
      t || Nb(),
      qe.forEach(function (e) {
        Oa(e) && (e.smooth && (e.target.style.scrollBehavior = 'auto'), e(0));
      }),
      Et.slice(0).forEach(function (e) {
        return e.refresh();
      }),
      Et.forEach(function (e, t) {
        if (e._subPinOffset && e.pin) {
          let r = e.vars.horizontal ? 'offsetWidth' : 'offsetHeight';
          let n = e.pin[r];
          e.revert(!0, 1), e.adjustPinSpacing(e.pin[r] - n), e.refresh();
        }
      }),
      Et.forEach(function (e) {
        let t = La(e.scroller, e._dir);
        (e.vars.end === 'max' || (e._endClamp && e.end > t)) &&
              e.setPositions(e.start, Math.max(e.start + 1, t), !0);
      }),
      r.forEach(function (e) {
        return e && e.render && e.render(-1);
      }),
      qe.forEach(function (e) {
        Oa(e) &&
              (e.smooth &&
                requestAnimationFrame(function () {
                  return (e.target.style.scrollBehavior = 'smooth');
                }),
              e.rec && e(e.rec));
      }),
      Ob(_, 1),
      c.pause(),
      Mt++,
      V((ot = 2)),
      Et.forEach(function (e) {
        return Oa(e.vars.onRefresh) && e.vars.onRefresh(e);
      }),
      (ot = ee.isRefreshing = !1),
      H('refresh');
    } else {
      rb(ee, 'scrollEnd', Jb);
    }
  };
  let j = 0;
  let At = 1;
  var V = function _updateAll(e) {
    if (!ot || e === 2) {
      (ee.isUpdating = !0), st && st.update(0);
      let t = Et.length;
      let r = ct();
      let n = r - S >= 50;
      let i = t && Et[0].scroll();
      if (
        ((At = i < j ? -1 : 1),
        ot || (j = i),
        n && (ut && !et && r - ut > 200 && ((ut = 0), H('scrollEnd')), (Ke = S), (S = r)),
        At < 0)
      ) {
        for (tt = t; tt-- > 0;) {
          Et[tt] && Et[tt].update(0, n);
        }
        At = 1;
      } else {
        for (tt = 0; tt < t; tt++) {
          Et[tt] && Et[tt].update(0, n);
        }
      }
      ee.isUpdating = !1;
    }
    w = 0;
  };
  var U = [
    'left',
    'top',
    D,
    T,
    _t + yt,
    _t + vt,
    _t + mt,
    _t + bt,
    'display',
    'flexShrink',
    'float',
    'zIndex',
    'gridColumnStart',
    'gridColumnEnd',
    'gridRowStart',
    'gridRowEnd',
    'gridArea',
    'justifySelf',
    'alignSelf',
    'placeSelf',
    'order'
  ];
  var Q = U.concat([ht, gt, 'boxSizing', 'max' + wt, 'max' + R, 'position', _t, xt, xt + mt, xt + vt, xt + yt, xt + bt]);
  let Z = /([A-Z])/g;
  var Dt = function _setState(e) {
    if (e) {
      let t;
      let r;
      let n = e.t.style;
      let i = e.length;
      let o = 0;
      for ((e.t._gsap || Ne.core.getCache(e.t)).uncache = 1; o < i; o += 2) {
        (r = e[o + 1]), (t = e[o]), r ? (n[t] = r) : n[t] && n.removeProperty(t.replace(Z, '-$1').toLowerCase());
      }
    }
  };
  var Rt = {left: 0, top: 0};
  var $ = /(webkit|moz|length|cssText|inset)/i;
  var ee =
      ((ScrollTrigger.prototype.init = function init(M, O) {
        if (((this.progress = this.start = 0), this.vars && this.kill(!0, !0), ft)) {
          let A;
          let n;
          let d;
          let D;
          let R;
          let B;
          let Y;
          let q;
          let F;
          let L;
          let I;
          let e;
          let X;
          let N;
          let H;
          let W;
          let G;
          let j;
          let t;
          let V;
          let b;
          let U;
          let Q;
          let m;
          let Z;
          let y;
          let $;
          let x;
          let r;
          let _;
          let w;
          let ee;
          let i;
          let h;
          let te;
          let re;
          let ne;
          let S;
          let o;
          let C = (M = jb(pt(M) || Pa(M) || M.nodeType ? {trigger: M} : M, kt)).onUpdate;
          let T = M.toggleClass;
          let a = M.id;
          let k = M.onToggle;
          let ie = M.onRefresh;
          let E = M.scrub;
          let oe = M.trigger;
          let ae = M.pin;
          let se = M.pinSpacing;
          let le = M.invalidateOnRefresh;
          let P = M.anticipatePin;
          let s = M.onScrubComplete;
          let g = M.onSnapComplete;
          let ce = M.once;
          let ue = M.snap;
          let fe = M.pinReparent;
          let l = M.pinSpacer;
          let pe = M.containerAnimation;
          let de = M.fastScrollEnd;
          let he = M.preventOverlaps;
          let ge = M.horizontal || (M.containerAnimation && !1 !== M.horizontal) ? Le : Ie;
          let ve = !E && E !== 0;
          let be = J(M.scroller || He);
          let c = Ne.core.getCache(be);
          let me = Ha(be);
          let ye = ('pinType' in M ? M.pinType : z(be, 'pinType') || (me && 'fixed')) === 'fixed';
          let xe = [M.onEnter, M.onLeave, M.onEnterBack, M.onLeaveBack];
          let _e = ve && M.toggleActions.split(' ');
          let we = 'markers' in M ? M.markers : kt.markers;
          let Se = me ? 0 : parseFloat(hb(be)['border' + ge.p2 + wt]) || 0;
          let Ce = this;
          let Te =
              M.onRefreshInit &&
              function () {
                return M.onRefreshInit(Ce);
              };
          let ke = (function _getSizeFunc(e, t, r) {
            let n = r.d;
            let i = r.d2;
            let o = r.a;
            return (o = z(e, 'getBoundingClientRect'))
              ? function () {
                return o()[n];
              }
              : function () {
                return (t ? He['inner' + i] : e['client' + i]) || 0;
              };
          })(be, me, ge);
          let Ee = (function _getOffsetsFunc(e, t) {
            return !t || ~ze.indexOf(e)
              ? Ia(e)
              : function () {
                return Rt;
              };
          })(be, me);
          let Pe = 0;
          let Me = 0;
          let Oe = 0;
          let Ae = K(be, ge);
          if (
            ((Ce._startClamp = Ce._endClamp = !1),
            (Ce._dir = ge),
            (P *= 45),
            (Ce.scroller = be),
            (Ce.scroll = pe ? pe.time.bind(pe) : Ae),
            (D = Ae()),
            (Ce.vars = M),
            (O = O || M.animation),
            'refreshPriority' in M && ((rt = 1), M.refreshPriority === -9999 && (st = Ce)),
            (c.tweenScroll = c.tweenScroll || {top: kc(be, Ie), left: kc(be, Le)}),
            (Ce.tweenTo = A = c.tweenScroll[ge.p]),
            (Ce.scrubDuration = function (e) {
              (i = Pa(e) && e)
                ? ee
                  ? ee.duration(e)
                  : (ee = Ne.to(O, {
                    ease: 'expo',
                    totalProgress: '+=0',
                    duration: i,
                    paused: !0,
                    onComplete: function onComplete() {
                      return s && s(Ce);
                    },
                  }))
                : (ee && ee.progress(1).kill(), (ee = 0));
            }),
            O &&
              ((O.vars.lazy = !1),
              (O._initted && !Ce.isReverted) ||
                (!1 !== O.vars.immediateRender && !1 !== M.immediateRender && O.duration() && O.render(0, !0, !0)),
              (Ce.animation = O.pause()),
              (O.scrollTrigger = Ce).scrubDuration(E),
              (_ = 0),
              (a = a || O.vars.id)),
            ue &&
              ((Qa(ue) && !ue.push) || (ue = {snapTo: ue}),
              'scrollBehavior' in Je.style && Ne.set(me ? [Je, je] : be, {scrollBehavior: 'auto'}),
              qe.forEach(function (e) {
                return Oa(e) && e.target === (me ? Ge.scrollingElement || je : be) && (e.smooth = !1);
              }),
              (d = Oa(ue.snapTo)
                ? ue.snapTo
                : ue.snapTo === 'labels'
                  ? (function _getClosestLabel(t) {
                    return function (e) {
                      return Ne.utils.snap(mb(t), e);
                    };
                  })(O)
                  : ue.snapTo === 'labelsDirectional'
                    ? (function _getLabelAtDirection(r) {
                      return function (e, t) {
                        return ob(mb(r))(e, t.direction);
                      };
                    })(O)
                    : !1 !== ue.directional
                      ? function (e, t) {
                        return ob(ue.snapTo)(e, ct() - Me < 500 ? 0 : t.direction);
                      }
                      : Ne.utils.snap(ue.snapTo)),
              (h = ue.duration || {min: 0.1, max: 2}),
              (h = Qa(h) ? Ue(h.min, h.max) : Ue(h, h)),
              (te = Ne.delayedCall(ue.delay || i / 2 || 0.1, function () {
                let e = Ae();
                let t = ct() - Me < 500;
                let r = A.tween;
                if (!(t || Math.abs(Ce.getVelocity()) < 10) || r || et || Pe === e) {
                  Ce.isActive && Pe !== e && te.restart(!0);
                } else {
                  let n = (e - B) / N;
                  let i = O && !ve ? O.totalProgress() : n;
                  let o = t ? 0 : ((i - w) / (ct() - Ke)) * 1e3 || 0;
                  let a = Ne.utils.clamp(-n, 1 - n, (dt(o / 2) * o) / 0.185);
                  let s = n + (!1 === ue.inertia ? 0 : a);
                  let l = Ue(0, 1, d(s, Ce));
                  let c = Math.round(B + l * N);
                  let u = ue.onStart;
                  let f = ue.onInterrupt;
                  let p = ue.onComplete;
                  if (e <= Y && B <= e && c !== e) {
                    if (r && !r._initted && r.data <= dt(c - e)) {
                      return;
                    }
                    !1 === ue.inertia && (a = l - n),
                    A(
                        c,
                        {
                          duration: h(dt((0.185 * Math.max(dt(s - i), dt(l - i))) / o / 0.05 || 0)),
                          ease: ue.ease || 'power3',
                          data: dt(c - e),
                          onInterrupt: function onInterrupt() {
                            return te.restart(!0) && f && f(Ce);
                          },
                          onComplete: function onComplete() {
                            Ce.update(),
                            (Pe = Ae()),
                            (_ = w = O && !ve ? O.totalProgress() : Ce.progress),
                            g && g(Ce),
                            p && p(Ce);
                          },
                        },
                        e,
                        a * N,
                        c - e - a * N
                    ),
                    u && u(Ce, A.tween);
                  }
                }
              }).pause())),
            a && (Pt[a] = Ce),
            (o = (o = (oe = Ce.trigger = J(oe || (!0 !== ae && ae))) && oe._gsap && oe._gsap.stRevert) && o(Ce)),
            (ae = !0 === ae ? oe : J(ae)),
            pt(T) && (T = {targets: oe, className: T}),
            ae &&
              (!1 === se ||
                se === _t ||
                (se = !(!se && ae.parentNode && ae.parentNode.style && hb(ae.parentNode).display === 'flex') && xt),
              (Ce.pin = ae),
              (n = Ne.core.getCache(ae)).spacer
                ? (H = n.pinState)
                : (l &&
                    ((l = J(l)) && !l.nodeType && (l = l.current || l.nativeElement),
                    (n.spacerIsNative = !!l),
                    l && (n.spacerState = cc(l))),
                (n.spacer = j = l || Ge.createElement('div')),
                j.classList.add('pin-spacer'),
                a && j.classList.add('pin-spacer-' + a),
                (n.pinState = H = cc(ae))),
              !1 !== M.force3D && Ne.set(ae, {force3D: !0}),
              (Ce.spacer = j = n.spacer),
              (r = hb(ae)),
              (m = r[se + ge.os2]),
              (V = Ne.getProperty(ae)),
              (b = Ne.quickSetter(ae, ge.a, St)),
              _b(ae, j, r),
              (G = cc(ae))),
            we)
          ) {
            (e = Qa(we) ? jb(we, Tt) : Tt),
            (L = yb('scroller-start', a, be, ge, e, 0)),
            (I = yb('scroller-end', a, be, ge, e, 0, L)),
            (t = L['offset' + ge.op.d2]);
            let u = J(z(be, 'content') || be);
            (q = this.markerStart = yb('start', a, u, ge, e, t, 0, pe)),
            (F = this.markerEnd = yb('end', a, u, ge, e, t, 0, pe)),
            pe && (S = Ne.quickSetter([q, F], ge.a, St)),
            ye ||
                (ze.length && !0 === z(be, 'fixedMarkers')) ||
                ((function _makePositionable(e) {
                  let t = hb(e).position;
                  e.style.position = t === 'absolute' || t === 'fixed' ? t : 'relative';
                })(me ? Je : be),
                Ne.set([L, I], {force3D: !0}),
                (y = Ne.quickSetter(L, ge.a, St)),
                (x = Ne.quickSetter(I, ge.a, St)));
          }
          if (pe) {
            let f = pe.vars.onUpdate;
            let p = pe.vars.onUpdateParams;
            pe.eventCallback('onUpdate', function () {
              Ce.update(0, 0, 1), f && f.apply(pe, p || []);
            });
          }
          if (
            ((Ce.previous = function () {
              return Et[Et.indexOf(Ce) - 1];
            }),
            (Ce.next = function () {
              return Et[Et.indexOf(Ce) + 1];
            }),
            (Ce.revert = function (e, t) {
              if (!t) {
                return Ce.kill(!0);
              }
              let r = !1 !== e || !Ce.enabled;
              let n = Qe;
              r !== Ce.isReverted &&
                (r && ((re = Math.max(Ae(), Ce.scroll.rec || 0)), (Oe = Ce.progress), (ne = O && O.progress())),
                q &&
                  [q, F, L, I].forEach(function (e) {
                    return (e.style.display = r ? 'none' : 'block');
                  }),
                r && (Qe = Ce).update(r),
                !ae ||
                  (fe && Ce.isActive) ||
                  (r
                    ? (function _swapPinOut(e, t, r) {
                      Dt(r);
                      let n = e._gsap;
                      if (n.spacerIsNative) {
                        Dt(n.spacerState);
                      } else if (e._gsap.swappedIn) {
                        let i = t.parentNode;
                        i && (i.insertBefore(e, t), i.removeChild(t));
                      }
                      e._gsap.swappedIn = !1;
                    })(ae, j, H)
                    : _b(ae, j, hb(ae), Z)),
                r || Ce.update(r),
                (Qe = n),
                (Ce.isReverted = r));
            }),
            (Ce.refresh = function (e, t, r, n) {
              if ((!Qe && Ce.enabled) || t) {
                if (ae && e && ut) {
                  rb(ScrollTrigger, 'scrollEnd', Jb);
                } else {
                  !ot && Te && Te(Ce),
                  (Qe = Ce),
                  A.tween && (A.tween.kill(), (A.tween = 0)),
                  ee && ee.pause(),
                  le && O && O.revert({kill: !1}).invalidate(),
                  Ce.isReverted || Ce.revert(!0, !0),
                  (Ce._subPinOffset = !1);
                  let i;
                  let o;
                  let a;
                  let s;
                  let l;
                  let c;
                  let u;
                  let f;
                  let p;
                  let d;
                  let h;
                  let g;
                  let v;
                  let b = ke();
                  let m = Ee();
                  let y = pe ? pe.duration() : La(be, ge);
                  let x = N <= 0.01;
                  let _ = 0;
                  let w = n || 0;
                  let S = Qa(r) ? r.end : M.end;
                  let C = M.endTrigger || oe;
                  let T = Qa(r) ? r.start : M.start || (M.start !== 0 && oe ? (ae ? '0 0' : '0 100%') : 0);
                  let k = (Ce.pinnedContainer = M.pinnedContainer && J(M.pinnedContainer, Ce));
                  let E = (oe && Math.max(0, Et.indexOf(Ce))) || 0;
                  let P = E;
                  for (we && Qa(r) && ((g = Ne.getProperty(L, ge.p)), (v = Ne.getProperty(I, ge.p))); P--;) {
                    (c = Et[P]).end || c.refresh(0, 1) || (Qe = Ce),
                    !(u = c.pin) ||
                        (u !== oe && u !== ae && u !== k) ||
                        c.isReverted ||
                        ((d = d || []).unshift(c), c.revert(!0, !0)),
                    c !== Et[P] && (E--, P--);
                  }
                  for (
                    Oa(T) && (T = T(Ce)),
                    T = ya(T, 'start', Ce),
                    B =
                        fc(T, oe, b, ge, Ae(), q, L, Ce, m, Se, ye, y, pe, Ce._startClamp && '_startClamp') ||
                        (ae ? -0.001 : 0),
                    Oa(S) && (S = S(Ce)),
                    pt(S) &&
                        !S.indexOf('+=') &&
                        (~S.indexOf(' ')
                          ? (S = (pt(T) ? T.split(' ')[0] : '') + S)
                          : ((_ = xb(S.substr(2), b)),
                          (S = pt(T)
                            ? T
                            : (pe
                              ? Ne.utils.mapRange(0, pe.duration(), pe.scrollTrigger.start, pe.scrollTrigger.end, B)
                              : B) + _),
                          (C = oe))),
                    S = ya(S, 'end', Ce),
                    Y =
                        Math.max(
                            B,
                            fc(
                                S || (C ? '100% 0' : y),
                                C,
                                b,
                                ge,
                                Ae() + _,
                                F,
                                I,
                                Ce,
                                m,
                                Se,
                                ye,
                                y,
                                pe,
                                Ce._endClamp && '_endClamp'
                            )
                        ) || -0.001,
                    _ = 0,
                    P = E;
                    P--;

                  ) {
                    (u = (c = Et[P]).pin) &&
                      c.start - c._pinPush <= B &&
                      !pe &&
                      c.end > 0 &&
                      ((i = c.end - (Ce._startClamp ? Math.max(0, c.start) : c.start)),
                      ((u === oe && c.start - c._pinPush < B) || u === k) && isNaN(T) && (_ += i * (1 - c.progress)),
                      u === ae && (w += i));
                  }
                  if (
                    ((B += _),
                    (Y += _),
                    Ce._startClamp && (Ce._startClamp += _),
                    Ce._endClamp && !ot && ((Ce._endClamp = Y || -0.001), (Y = Math.min(Y, La(be, ge)))),
                    (N = Y - B || ((B -= 0.01) && 0.001)),
                    x && (Oe = Ne.utils.clamp(0, 1, Ne.utils.normalize(B, Y, re))),
                    (Ce._pinPush = w),
                    q && _ && (((i = {})[ge.a] = '+=' + _), k && (i[ge.p] = '-=' + Ae()), Ne.set([q, F], i)),
                    ae)
                  ) {
                    (i = hb(ae)),
                    (s = ge === Ie),
                    (a = Ae()),
                    (U = parseFloat(V(ge.a)) + w),
                    !y &&
                        Y > 1 &&
                        ((h = {
                          style: (h = (me ? Ge.scrollingElement || je : be).style),
                          value: h['overflow' + ge.a.toUpperCase()],
                        }),
                        me &&
                          hb(Je)['overflow' + ge.a.toUpperCase()] !== 'scroll' &&
                          (h.style['overflow' + ge.a.toUpperCase()] = 'scroll')),
                    _b(ae, j, i),
                    (G = cc(ae)),
                    (o = Ct(ae, !0)),
                    (f = ye && K(be, s ? Le : Ie)()),
                    se &&
                        (((Z = [se + ge.os2, N + w + St]).t = j),
                        (P = se === xt ? lb(ae, ge) + N + w : 0) && Z.push(ge.d, P + St),
                        Dt(Z),
                        k &&
                          Et.forEach(function (e) {
                            e.pin === k && !1 !== e.vars.pinSpacing && (e._subPinOffset = !0);
                          }),
                        ye && Ae(re)),
                    ye &&
                        (((l = {
                          top: o.top + (s ? a - B : f) + St,
                          left: o.left + (s ? f : a - B) + St,
                          boxSizing: 'border-box',
                          position: 'fixed',
                        })[ht] = l.maxWidth =
                          Math.ceil(o.width) + St),
                        (l[gt] = l.maxHeight = Math.ceil(o.height) + St),
                        (l[_t] = l[_t + mt] = l[_t + vt] = l[_t + yt] = l[_t + bt] = '0'),
                        (l[xt] = i[xt]),
                        (l[xt + mt] = i[xt + mt]),
                        (l[xt + vt] = i[xt + vt]),
                        (l[xt + yt] = i[xt + yt]),
                        (l[xt + bt] = i[xt + bt]),
                        (W = (function _copyState(e, t, r) {
                          for (var n, i = [], o = e.length, a = r ? 8 : 0; a < o; a += 2) {
                            (n = e[a]), i.push(n, n in t ? t[n] : e[a + 1]);
                          }
                          return (i.t = e.t), i;
                        })(H, l, fe)),
                        ot && Ae(0)),
                    O
                      ? ((p = O._initted),
                      nt(1),
                      O.render(O.duration(), !0, !0),
                      (Q = V(ge.a) - U + N + w),
                      ($ = Math.abs(N - Q) > 1),
                      ye && $ && W.splice(W.length - 2, 2),
                      O.render(0, !0, !0),
                      p || O.invalidate(!0),
                      O.parent || O.totalTime(O.totalTime()),
                      nt(0))
                      : (Q = N),
                    h &&
                        (h.value
                          ? (h.style['overflow' + ge.a.toUpperCase()] = h.value)
                          : h.style.removeProperty('overflow-' + ge.a));
                  } else if (oe && Ae() && !pe) {
                    for (o = oe.parentNode; o && o !== Je;) {
                      o._pinOffset && ((B -= o._pinOffset), (Y -= o._pinOffset)), (o = o.parentNode);
                    }
                  }
                  d &&
                    d.forEach(function (e) {
                      return e.revert(!1, !0);
                    }),
                  (Ce.start = B),
                  (Ce.end = Y),
                  (D = R = ot ? re : Ae()),
                  pe || ot || (D < re && Ae(re), (Ce.scroll.rec = 0)),
                  Ce.revert(!1, !0),
                  (Me = ct()),
                  te && ((Pe = -1), Ce.isActive && Ae(B + N * Oe), te.restart(!0)),
                  (Qe = 0),
                  O &&
                      ve &&
                      (O._initted || ne) &&
                      O.progress() !== ne &&
                      O.progress(ne || 0, !0).render(O.time(), !0, !0),
                  (x || Oe !== Ce.progress || pe) &&
                      (O && !ve && O.totalProgress(pe && B < -0.001 && !Oe ? Ne.utils.normalize(B, Y, 0) : Oe, !0),
                      (Ce.progress = x || (D - B) / N === Oe ? 0 : Oe)),
                  ae && se && (j._pinOffset = Math.round(Ce.progress * Q)),
                  ee && ee.invalidate(),
                  isNaN(g) ||
                      ((g -= Ne.getProperty(L, ge.p)),
                      (v -= Ne.getProperty(I, ge.p)),
                      jc(L, ge, g),
                      jc(q, ge, g - (n || 0)),
                      jc(I, ge, v),
                      jc(F, ge, v - (n || 0))),
                  x && !ot && Ce.update(),
                  !ie || ot || X || ((X = !0), ie(Ce), (X = !1));
                }
              }
            }),
            (Ce.getVelocity = function () {
              return ((Ae() - R) / (ct() - Ke)) * 1e3 || 0;
            }),
            (Ce.endAnimation = function () {
              Ra(Ce.callbackAnimation),
              O && (ee ? ee.progress(1) : O.paused() ? ve || Ra(O, Ce.direction < 0, 1) : Ra(O, O.reversed()));
            }),
            (Ce.labelToScroll = function (e) {
              return (O && O.labels && (B || Ce.refresh() || B) + (O.labels[e] / O.duration()) * N) || 0;
            }),
            (Ce.getTrailing = function (t) {
              let e = Et.indexOf(Ce);
              let r = Ce.direction > 0 ? Et.slice(0, e).reverse() : Et.slice(e + 1);
              return (
                pt(t)
                  ? r.filter(function (e) {
                    return e.vars.preventOverlaps === t;
                  })
                  : r
              ).filter(function (e) {
                return Ce.direction > 0 ? e.end <= B : e.start >= Y;
              });
            }),
            (Ce.update = function (e, t, r) {
              if (!pe || r || e) {
                let n;
                let i;
                let o;
                let a;
                let s;
                let l;
                let c;
                let u = !0 === ot ? re : Ce.scroll();
                let f = e ? 0 : (u - B) / N;
                let p = f < 0 ? 0 : f > 1 ? 1 : f || 0;
                let d = Ce.progress;
                if (
                  (t && ((R = D), (D = pe ? Ae() : u), ue && ((w = _), (_ = O && !ve ? O.totalProgress() : p))),
                  P && !p && ae && !Qe && !lt && ut && B < u + ((u - R) / (ct() - Ke)) * P && (p = 1e-4),
                  p !== d && Ce.enabled)
                ) {
                  if (
                    ((a = (s = (n = Ce.isActive = !!p && p < 1) != (!!d && d < 1)) || !!p != !!d),
                    (Ce.direction = d < p ? 1 : -1),
                    (Ce.progress = p),
                    a &&
                      !Qe &&
                      ((i = p && !d ? 0 : p === 1 ? 1 : d === 1 ? 2 : 3),
                      ve &&
                        ((o = (!s && _e[i + 1] !== 'none' && _e[i + 1]) || _e[i]),
                        (c = O && (o === 'complete' || o === 'reset' || o in O)))),
                    he &&
                      (s || c) &&
                      (c || E || !O) &&
                      (Oa(he)
                        ? he(Ce)
                        : Ce.getTrailing(he).forEach(function (e) {
                          return e.endAnimation();
                        })),
                    ve ||
                      (!ee || Qe || lt
                        ? O && O.totalProgress(p, !(!Qe || (!Me && !e)))
                        : (ee._dp._time - ee._start !== ee._time && ee.render(ee._dp._time - ee._start),
                        ee.resetTo
                          ? ee.resetTo('totalProgress', p, O._tTime / O._tDur)
                          : ((ee.vars.totalProgress = p), ee.invalidate().restart()))),
                    ae)
                  ) {
                    if ((e && se && (j.style[se + ge.os2] = m), ye)) {
                      if (a) {
                        if (((l = !e && d < p && u < Y + 1 && u + 1 >= La(be, ge)), fe)) {
                          if (e || (!n && !l)) {
                            hc(ae, j);
                          } else {
                            let h = Ct(ae, !0);
                            let g = u - B;
                            hc(ae, Je, h.top + (ge === Ie ? g : 0) + St, h.left + (ge === Ie ? 0 : g) + St);
                          }
                        }
                        Dt(n || l ? W : G), ($ && p < 1 && n) || b(U + (p !== 1 || l ? 0 : Q));
                      }
                    } else {
                      b(Ea(U + Q * p));
                    }
                  }
                  !ue || A.tween || Qe || lt || te.restart(!0),
                  T &&
                      (s || (ce && p && (p < 1 || !it))) &&
                      Ve(T.targets).forEach(function (e) {
                        return e.classList[n || ce ? 'add' : 'remove'](T.className);
                      }),
                  !C || ve || e || C(Ce),
                  a && !Qe
                    ? (ve &&
                          (c &&
                            (o === 'complete'
                              ? O.pause().totalProgress(1)
                              : o === 'reset'
                                ? O.restart(!0).pause()
                                : o === 'restart'
                                  ? O.restart(!0)
                                  : O[o]()),
                          C && C(Ce)),
                    (!s && it) ||
                          (k && s && Sa(Ce, k),
                          xe[i] && Sa(Ce, xe[i]),
                          ce && (p === 1 ? Ce.kill(!1, 1) : (xe[i] = 0)),
                          s || (xe[(i = p === 1 ? 1 : 3)] && Sa(Ce, xe[i]))),
                    de &&
                          !n &&
                          Math.abs(Ce.getVelocity()) > (Pa(de) ? de : 2500) &&
                          (Ra(Ce.callbackAnimation), ee ? ee.progress(1) : Ra(O, o === 'reverse' ? 1 : !p, 1)))
                    : ve && C && !Qe && C(Ce);
                }
                if (x) {
                  let v = pe ? (u / pe.duration()) * (pe._caScrollDist || 0) : u;
                  y(v + (L._isFlipped ? 1 : 0)), x(v);
                }
                S && S((-u / pe.duration()) * (pe._caScrollDist || 0));
              }
            }),
            (Ce.enable = function (e, t) {
              Ce.enabled ||
                ((Ce.enabled = !0),
                rb(be, 'resize', Gb),
                rb(me ? Ge : be, 'scroll', Eb),
                Te && rb(ScrollTrigger, 'refreshInit', Te),
                !1 !== e && ((Ce.progress = Oe = 0), (D = R = Pe = Ae())),
                !1 !== t && Ce.refresh());
            }),
            (Ce.getTween = function (e) {
              return e && A ? A.tween : ee;
            }),
            (Ce.setPositions = function (e, t, r, n) {
              if (pe) {
                let i = pe.scrollTrigger;
                let o = pe.duration();
                let a = i.end - i.start;
                (e = i.start + (a * e) / o), (t = i.start + (a * t) / o);
              }
              Ce.refresh(!1, !1, {start: za(e, r && !!Ce._startClamp), end: za(t, r && !!Ce._endClamp)}, n),
              Ce.update();
            }),
            (Ce.adjustPinSpacing = function (e) {
              if (Z && e) {
                let t = Z.indexOf(ge.d) + 1;
                (Z[t] = parseFloat(Z[t]) + e + St), (Z[1] = parseFloat(Z[1]) + e + St), Dt(Z);
              }
            }),
            (Ce.disable = function (e, t) {
              if (
                Ce.enabled &&
                (!1 !== e && Ce.revert(!0, !0),
                (Ce.enabled = Ce.isActive = !1),
                t || (ee && ee.pause()),
                (re = 0),
                n && (n.uncache = 1),
                Te && sb(ScrollTrigger, 'refreshInit', Te),
                te && (te.pause(), A.tween && A.tween.kill() && (A.tween = 0)),
                !me)
              ) {
                for (let r = Et.length; r--;) {
                  if (Et[r].scroller === be && Et[r] !== Ce) {
                    return;
                  }
                }
                sb(be, 'resize', Gb), sb(be, 'scroll', Eb);
              }
            }),
            (Ce.kill = function (e, t) {
              Ce.disable(e, t), ee && !t && ee.kill(), a && delete Pt[a];
              let r = Et.indexOf(Ce);
              r >= 0 && Et.splice(r, 1),
              r === tt && At > 0 && tt--,
              (r = 0),
              Et.forEach(function (e) {
                return e.scroller === Ce.scroller && (r = 1);
              }),
              r || ot || (Ce.scroll.rec = 0),
              O && ((O.scrollTrigger = null), e && O.revert({kill: !1}), t || O.kill()),
              q &&
                  [q, F, L, I].forEach(function (e) {
                    return e.parentNode && e.parentNode.removeChild(e);
                  }),
              st === Ce && (st = 0),
              ae &&
                  (n && (n.uncache = 1),
                  (r = 0),
                  Et.forEach(function (e) {
                    return e.pin === ae && r++;
                  }),
                  r || (n.spacer = 0)),
              M.onKill && M.onKill(Ce);
            }),
            Et.push(Ce),
            Ce.enable(!1, !1),
            o && o(Ce),
            O && O.add && !N)
          ) {
            let v = Ce.update;
            (Ce.update = function () {
              (Ce.update = v), B || Y || Ce.refresh();
            }),
            Ne.delayedCall(0.01, Ce.update),
            (N = 0.01),
            (B = Y = 0);
          } else {
            Ce.refresh();
          }
          ae &&
            (function _queueRefreshAll() {
              if (at !== Mt) {
                let e = (at = Mt);
                requestAnimationFrame(function () {
                  return e === Mt && Ot(!0);
                });
              }
            })();
        } else {
          this.update = this.refresh = this.kill = Da;
        }
      }),
      (ScrollTrigger.register = function register(e) {
        return s || ((Ne = e || Ga()), Fa() && window.document && ScrollTrigger.enable(), (s = ft)), s;
      }),
      (ScrollTrigger.defaults = function defaults(e) {
        if (e) {
          for (let t in e) {
            kt[t] = e[t];
          }
        }
        return kt;
      }),
      (ScrollTrigger.disable = function disable(t, r) {
        (ft = 0),
        Et.forEach(function (e) {
          return e[r ? 'kill' : 'disable'](t);
        }),
        sb(He, 'wheel', Eb),
        sb(Ge, 'scroll', Eb),
        clearInterval(u),
        sb(Ge, 'touchcancel', Da),
        sb(Je, 'touchstart', Da),
        qb(sb, Ge, 'pointerdown,touchstart,mousedown', Ba),
        qb(sb, Ge, 'pointerup,touchend,mouseup', Ca),
        c.kill(),
        Ma(sb);
        for (let e = 0; e < qe.length; e += 3) {
          tb(sb, qe[e], qe[e + 1]), tb(sb, qe[e], qe[e + 2]);
        }
      }),
      (ScrollTrigger.enable = function enable() {
        if (
          ((He = window),
          (Ge = document),
          (je = Ge.documentElement),
          (Je = Ge.body),
          Ne &&
            ((Ve = Ne.utils.toArray),
            (Ue = Ne.utils.clamp),
            (x = Ne.core.context || Da),
            (nt = Ne.core.suppressOverwrites || Da),
            (_ = He.history.scrollRestoration || 'auto'),
            (j = He.pageYOffset),
            Ne.core.globals('ScrollTrigger', ScrollTrigger),
            Je))
        ) {
          (ft = 1),
          (function _rafBugFix() {
            return ft && requestAnimationFrame(_rafBugFix);
          })(),
          k.register(Ne),
          (ScrollTrigger.isTouch = k.isTouch),
          (E = k.isTouch && /(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent)),
          rb(He, 'wheel', Eb),
          (l = [He, Ge, je, Je]),
          Ne.matchMedia
            ? ((ScrollTrigger.matchMedia = function (e) {
              let t;
              let r = Ne.matchMedia();
              for (t in e) {
                r.add(t, e[t]);
              }
              return r;
            }),
            Ne.addEventListener('matchMediaInit', function () {
              return Nb();
            }),
            Ne.addEventListener('matchMediaRevert', function () {
              return Mb();
            }),
            Ne.addEventListener('matchMedia', function () {
              Ot(0, 1), H('matchMedia');
            }),
            Ne.matchMedia('(orientation: portrait)', function () {
              return Fb(), Fb;
            }))
            : console.warn('Requires GSAP 3.11.0 or later'),
          Fb(),
          rb(Ge, 'scroll', Eb);
          let e;
          let t;
          let r = Je.style;
          let n = r.borderTopStyle;
          let i = Ne.core.Animation.prototype;
          for (
            i.revert ||
              Object.defineProperty(i, 'revert', {
                value: function value() {
                  return this.time(-0.01, !0);
                },
              }),
            r.borderTopStyle = 'solid',
            e = Ct(Je),
            Ie.m = Math.round(e.top + Ie.sc()) || 0,
            Le.m = Math.round(e.left + Le.sc()) || 0,
            n ? (r.borderTopStyle = n) : r.removeProperty('border-top-style'),
            u = setInterval(Db, 250),
            Ne.delayedCall(0.5, function () {
              return (lt = 0);
            }),
            rb(Ge, 'touchcancel', Da),
            rb(Je, 'touchstart', Da),
            qb(rb, Ge, 'pointerdown,touchstart,mousedown', Ba),
            qb(rb, Ge, 'pointerup,touchend,mouseup', Ca),
            f = Ne.utils.checkPrefix('transform'),
            Q.push(f),
            s = ct(),
            c = Ne.delayedCall(0.2, Ot).pause(),
            h = [
              Ge,
              'visibilitychange',
              function () {
                let e = He.innerWidth;
                let t = He.innerHeight;
                Ge.hidden ? ((p = e), (d = t)) : (p === e && d === t) || Gb();
              },
              Ge,
              'DOMContentLoaded',
              Ot,
              He,
              'load',
              Ot,
              He,
              'resize',
              Gb
            ],
            Ma(rb),
            Et.forEach(function (e) {
              return e.enable(0, 1);
            }),
            t = 0;
            t < qe.length;
            t += 3
          ) {
            tb(sb, qe[t], qe[t + 1]), tb(sb, qe[t], qe[t + 2]);
          }
        }
      }),
      (ScrollTrigger.config = function config(e) {
        'limitCallbacks' in e && (it = !!e.limitCallbacks);
        let t = e.syncInterval;
        (t && clearInterval(u)) || ((u = t) && setInterval(Db, t)),
        'ignoreMobileResize' in e && (b = ScrollTrigger.isTouch === 1 && e.ignoreMobileResize),
        'autoRefreshEvents' in e &&
            (Ma(sb) || Ma(rb, e.autoRefreshEvents || 'none'),
            (g = (e.autoRefreshEvents + '').indexOf('resize') === -1));
      }),
      (ScrollTrigger.scrollerProxy = function scrollerProxy(e, t) {
        let r = J(e);
        let n = qe.indexOf(r);
        let i = Ha(r);
        ~n && qe.splice(n, i ? 6 : 2), t && (i ? ze.unshift(He, t, Je, t, je, t) : ze.unshift(r, t));
      }),
      (ScrollTrigger.clearMatchMedia = function clearMatchMedia(t) {
        Et.forEach(function (e) {
          return e._ctx && e._ctx.query === t && e._ctx.kill(!0, !0);
        });
      }),
      (ScrollTrigger.isInViewport = function isInViewport(e, t, r) {
        let n = (pt(e) ? J(e) : e).getBoundingClientRect();
        let i = n[r ? ht : gt] * t || 0;
        return r ? n.right - i > 0 && n.left + i < He.innerWidth : n.bottom - i > 0 && n.top + i < He.innerHeight;
      }),
      (ScrollTrigger.positionInViewport = function positionInViewport(e, t, r) {
        pt(e) && (e = J(e));
        let n = e.getBoundingClientRect();
        let i = n[r ? ht : gt];
        let o = t == null ? i / 2 : t in Y ? Y[t] * i : ~t.indexOf('%') ? (parseFloat(t) * i) / 100 : parseFloat(t) || 0;
        return r ? (n.left + o) / He.innerWidth : (n.top + o) / He.innerHeight;
      }),
      (ScrollTrigger.killAll = function killAll(e) {
        if (
          (Et.slice(0).forEach(function (e) {
            return e.vars.id !== 'ScrollSmoother' && e.kill();
          }),
          !0 !== e)
        ) {
          let t = I.killAll || [];
          (I = {}),
          t.forEach(function (e) {
            return e();
          });
        }
      }),
      ScrollTrigger);
  function ScrollTrigger(e, t) {
    s || ScrollTrigger.register(Ne) || console.warn('Please gsap.registerPlugin(ScrollTrigger)'),
    x(this),
    this.init(e, t);
  }
  (ee.version = '3.12.1'),
  (ee.saveStyles = function (e) {
    return e
      ? Ve(e).forEach(function (e) {
        if (e && e.style) {
          let t = W.indexOf(e);
          t >= 0 && W.splice(t, 5),
          W.push(e, e.style.cssText, e.getBBox && e.getAttribute('transform'), Ne.core.getCache(e), x());
        }
      })
      : W;
  }),
  (ee.revert = function (e, t) {
    return Nb(!e, t);
  }),
  (ee.create = function (e, t) {
    return new ee(e, t);
  }),
  (ee.refresh = function (e) {
    return e ? Gb() : (s || ee.register()) && Ot(!0);
  }),
  (ee.update = function (e) {
    return ++qe.cache && V(!0 === e ? 2 : 0);
  }),
  (ee.clearScrollMemory = Ob),
  (ee.maxScroll = function (e, t) {
    return La(e, t ? Le : Ie);
  }),
  (ee.getScrollFunc = function (e, t) {
    return K(J(e), t ? Le : Ie);
  }),
  (ee.getById = function (e) {
    return Pt[e];
  }),
  (ee.getAll = function () {
    return Et.filter(function (e) {
      return e.vars.id !== 'ScrollSmoother';
    });
  }),
  (ee.isScrolling = function () {
    return !!ut;
  }),
  (ee.snapDirectional = ob),
  (ee.addEventListener = function (e, t) {
    let r = I[e] || (I[e] = []);
    ~r.indexOf(t) || r.push(t);
  }),
  (ee.removeEventListener = function (e, t) {
    let r = I[e];
    let n = r && r.indexOf(t);
    n >= 0 && r.splice(n, 1);
  }),
  (ee.batch = function (e, t) {
    function pp(e, t) {
      let r = [];
      let n = [];
      let i = Ne.delayedCall(o, function () {
        t(r, n), (r = []), (n = []);
      }).pause();
      return function (e) {
        r.length || i.restart(!0), r.push(e.trigger), n.push(e), a <= r.length && i.progress(1);
      };
    }
    let r;
    let n = [];
    let i = {};
    var o = t.interval || 0.016;
    var a = t.batchMax || 1e9;
    for (r in t) {
      i[r] = r.substr(0, 2) === 'on' && Oa(t[r]) && r !== 'onRefreshInit' ? pp(0, t[r]) : t[r];
    }
    return (
      Oa(a) &&
          ((a = a()),
          rb(ee, 'refresh', function () {
            return (a = t.batchMax());
          })),
      Ve(e).forEach(function (e) {
        let t = {};
        for (r in i) {
          t[r] = i[r];
        }
        (t.trigger = e), n.push(ee.create(t));
      }),
      n
    );
  });
  function mc(e, t, r, n) {
    return n < t ? e(n) : t < 0 && e(0), n < r ? (n - t) / (r - t) : r < 0 ? t / (t - r) : 1;
  }
  function nc(e, t) {
    !0 === t
      ? e.style.removeProperty('touch-action')
      : (e.style.touchAction = !0 === t ? 'auto' : t ? 'pan-' + t + (k.isTouch ? ' pinch-zoom' : '') : 'none'),
    e === je && nc(Je, t);
  }
  function pc(e) {
    let t;
    let r = e.event;
    let n = e.target;
    let i = e.axis;
    let o = (r.changedTouches ? r.changedTouches[0] : r).target;
    let a = o._gsap || Ne.core.getCache(o);
    let s = ct();
    if (!a._isScrollT || s - a._isScrollT > 2e3) {
      for (
        ;
        o &&
        o !== Je &&
        ((o.scrollHeight <= o.clientHeight && o.scrollWidth <= o.clientWidth) ||
          (!re[(t = hb(o)).overflowY] && !re[t.overflowX]));

      ) {
        o = o.parentNode;
      }
      (a._isScroll = o && o !== n && !Ha(o) && (re[(t = hb(o)).overflowY] || re[t.overflowX])), (a._isScrollT = s);
    }
    (!a._isScroll && i !== 'x') || (r.stopPropagation(), (r._gsapAllow = !0));
  }
  function qc(e, t, r, n) {
    return k.create({
      target: e,
      capture: !0,
      debounce: !1,
      lockAxis: !0,
      type: t,
      onWheel: (n = n && pc),
      onPress: n,
      onDrag: n,
      onScroll: n,
      onEnable: function onEnable() {
        return r && rb(Ge, k.eventTypes[0], ie, !1, !0);
      },
      onDisable: function onDisable() {
        return sb(Ge, k.eventTypes[0], ie, !0);
      },
    });
  }
  function uc(e) {
    function mq() {
      return (i = !1);
    }
    function pq() {
      (o = La(d, Ie)), (T = Ue(E ? 1 : 0, o)), f && (C = Ue(0, La(d, Le))), (l = Mt);
    }
    function qq() {
      (v._gsap.y = Ea(parseFloat(v._gsap.y) + b.offset) + 'px'),
      (v.style.transform = 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, ' + parseFloat(v._gsap.y) + ', 0, 1)'),
      (b.offset = b.cacheID = 0);
    }
    function wq() {
      pq(), a.isActive() && a.vars.scrollY > o && (b() > o ? a.progress(1) && b(o) : a.resetTo('scrollY', o));
    }
    Qa(e) || (e = {}),
    (e.preventDefault = e.isNormalizer = e.allowClicks = !0),
    e.type || (e.type = 'wheel,touch'),
    (e.debounce = !!e.debounce),
    (e.id = e.id || 'normalizer');
    let n;
    let o;
    let l;
    let i;
    let a;
    let c;
    let u;
    let s;
    var f = e.normalizeScrollX;
    let t = e.momentum;
    let r = e.allowNestedScroll;
    let p = e.onRelease;
    var d = J(e.target) || je;
    let h = Ne.core.globals().ScrollSmoother;
    let g = h && h.get();
    var v = E && ((e.content && J(e.content)) || (g && !1 !== e.content && !g.smooth() && g.content()));
    var b = K(d, Ie);
    let m = K(d, Le);
    let y = 1;
    let x =
        (k.isTouch && He.visualViewport ? He.visualViewport.scale * He.visualViewport.width : He.outerWidth) /
        He.innerWidth;
    let _ = 0;
    let w = Oa(t)
      ? function () {
        return t(n);
      }
      : function () {
        return t || 2.8;
      };
    let S = qc(d, e.type, !0, r);
    var C = Da;
    var T = Da;
    return (
      v && Ne.set(v, {y: '+=0'}),
      (e.ignoreCheck = function (e) {
        return (
          (E &&
            e.type === 'touchmove' &&
            (function ignoreDrag() {
              if (i) {
                requestAnimationFrame(mq);
                let e = Ea(n.deltaY / 2);
                let t = T(b.v - e);
                if (v && t !== b.v + b.offset) {
                  b.offset = t - b.v;
                  let r = Ea((parseFloat(v && v._gsap.y) || 0) - b.offset);
                  (v.style.transform = 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, ' + r + ', 0, 1)'),
                  (v._gsap.y = r + 'px'),
                  (b.cacheID = qe.cache),
                  V();
                }
                return !0;
              }
              b.offset && qq(), (i = !0);
            })()) ||
          (y > 1.05 && e.type !== 'touchstart') ||
          n.isGesturing ||
          (e.touches && e.touches.length > 1)
        );
      }),
      (e.onPress = function () {
        i = !1;
        let e = y;
        (y = Ea(((He.visualViewport && He.visualViewport.scale) || 1) / x)),
        a.pause(),
        e !== y && nc(d, y > 1.01 || (!f && 'x')),
        (c = m()),
        (u = b()),
        pq(),
        (l = Mt);
      }),
      (e.onRelease = e.onGestureStart =
        function (e, t) {
          if ((b.offset && qq(), t)) {
            qe.cache++;
            let r;
            let n;
            let i = w();
            f &&
              ((n = (r = m()) + (0.05 * i * -e.velocityX) / 0.227),
              (i *= mc(m, r, n, La(d, Le))),
              (a.vars.scrollX = C(n))),
            (n = (r = b()) + (0.05 * i * -e.velocityY) / 0.227),
            (i *= mc(b, r, n, La(d, Ie))),
            (a.vars.scrollY = T(n)),
            a.invalidate().duration(i).play(0.01),
            ((E && a.vars.scrollY >= o) || o - 1 <= r) && Ne.to({}, {onUpdate: wq, duration: i});
          } else {
            s.restart(!0);
          }
          p && p(e);
        }),
      (e.onWheel = function () {
        a._ts && a.pause(), ct() - _ > 1e3 && ((l = 0), (_ = ct()));
      }),
      (e.onChange = function (e, t, r, n, i) {
        if ((Mt !== l && pq(), t && f && m(C(n[2] === t ? c + (e.startX - e.x) : m() + t - n[1])), r)) {
          b.offset && qq();
          let o = i[2] === r;
          let a = o ? u + e.startY - e.y : b() + r - i[1];
          let s = T(a);
          o && a !== s && (u += s - a), b(s);
        }
        (r || t) && V();
      }),
      (e.onEnable = function () {
        nc(d, !f && 'x'),
        ee.addEventListener('refresh', wq),
        rb(He, 'resize', wq),
        b.smooth && ((b.target.style.scrollBehavior = 'auto'), (b.smooth = m.smooth = !1)),
        S.enable();
      }),
      (e.onDisable = function () {
        nc(d, !0), sb(He, 'resize', wq), ee.removeEventListener('refresh', wq), S.kill();
      }),
      (e.lockAxis = !1 !== e.lockAxis),
      ((n = new k(e)).iOS = E) && !b() && b(1),
      E && Ne.ticker.add(Da),
      (s = n._dc),
      (a = Ne.to(n, {
        ease: 'power4',
        paused: !0,
        scrollX: f ? '+=0.1' : '+=0',
        scrollY: '+=0.1',
        modifiers: {
          scrollY: ic(b, b(), function () {
            return a.pause();
          }),
        },
        onUpdate: V,
        onComplete: s.vars.onComplete,
      })),
      n
    );
  }
  let te;
  var re = {auto: 1, scroll: 1};
  let ne = /(input|label|select|textarea)/i;
  var ie = function _captureInputs(e) {
    let t = ne.test(e.target.tagName);
    (t || te) && ((e._gsapAllow = !0), (te = t));
  };
  (ee.sort = function (e) {
    return Et.sort(
        e ||
        function (e, t) {
          return -1e6 * (e.vars.refreshPriority || 0) + e.start - (t.start + -1e6 * (t.vars.refreshPriority || 0));
        }
    );
  }),
  (ee.observe = function (e) {
    return new k(e);
  }),
  (ee.normalizeScroll = function (e) {
    if (void 0 === e) {
      return v;
    }
    if (!0 === e && v) {
      return v.enable();
    }
    if (!1 === e) {
      return v && v.kill();
    }
    let t = e instanceof k ? e : uc(e);
    return v && v.target === t.target && v.kill(), Ha(t.target) && (v = t), t;
  }),
  (ee.core = {
    _getVelocityProp: L,
    _inputObserver: qc,
    _scrollers: qe,
    _proxies: ze,
    bridge: {
      ss: function ss() {
        ut || H('scrollStart'), (ut = ct());
      },
      ref: function ref() {
        return Qe;
      },
    },
  }),
  Ga() && Ne.registerPlugin(ee),
  (e.ScrollTrigger = ee),
  (e.default = ee);
  if (typeof window === 'undefined' || window !== e) {
    Object.defineProperty(e, '__esModule', {value: !0});
  } else {
    delete e.default;
  }
});
